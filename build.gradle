import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.22'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'com.shedhack.requestbody:cache-filter:2.2.0'
	implementation 'com.shedhack.requestbody:cache-interceptor:2.2.0'
	implementation 'io.leopard.boot:leopard-boot-requestbody:0.9.20'
	implementation 'io.github.dzw1113:multirequest:1.0.1'
	implementation 'org.ligboy.retrofit2:converter-fastjson-parent:2.1.0'
	implementation 'org.ligboy.retrofit2:converter-fastjson:2.1.0'
	testImplementation 'junit:junit:4.13.1'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
//	implementation 'com.starmcc:qm-framework:3.0.1-RELEASE'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	implementation("com.mysql:mysql-connector-j")

	implementation("org.springframework.security:spring-security-crypto:5.7.5")


}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
